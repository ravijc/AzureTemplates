{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "existingVNETName": {
      "type": "string",
      "metadata": {
        "description": "Existing VNET that contains the domain controller"
      }
    },
    "existingVNETRGName": {
      "type": "string",
      "allowedValues": [
        "Rg-AUEast-Vnet224",
        "rg-aueast-vnet225"
      ],
      "metadata": {
        "description": "Resource Group that the VNET belong"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet that contains the domain controller"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the availability set"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Storage Account"
      }
    },
    "privateIP": {
      "type": "string",
      "metadata": {
        "description": "Enter the IP address for the VM. Note the IP range (VNET224 - 10.224.50.0/24) (VNET225 - 10.225.50.0/24)"
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "unique Host Name. The fqdn will look something like '<dnsname>.inside.xero.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "The size of the virtual machines"
      }
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    }
  },
  "variables": {
    "vmAdminUsername": "rootlocal",
    "ouPath": "OU=Xero Servers,OU=Xero,DC=inside,DC=xero,DC=com",
    "imagePublisher": "MicrosoftWindowsServer",
    "domainToJoin": "inside.xero.com",
    "imageOffer": "WindowsServer",
    "windowsOSVersion": "2012-R2-Datacenter",
    "apiVersion": "2015-06-15",
    "nicName": "[concat(parameters('dnsLabelPrefix'),'Nic')]",
    "vnetID": "[resourceId(parameters('existingVNETRGName'), 'Microsoft.Network/virtualNetworks', parameters('existingVNETName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "3",
        "platformUpdateDomainCount": "5" 
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateIP')]",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('dnsLabelPrefix')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
        ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
          },
          "osProfile": {
            "computerName": "[parameters('dnsLabelPrefix')]",
            "adminUsername": "[variables('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('dnsLabelPrefix'), 'disk0.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": "true",
              "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
            }
          }
        }
      },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsLabelPrefix'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelPrefix'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.0",
        "settings": {
          "Name": "[variables('domainToJoin')]",
          "OUPath": "[variables('ouPath')]",
          "User": "[concat(variables('domainToJoin'), '\\', parameters('domainUsername'))]",
          "Restart": "true",
          "Options": "[parameters('domainJoinOptions')]"
        },
        "protectedsettings": {
          "Password": "[parameters('domainPassword')]"
        }
      }
    }
  ]
}